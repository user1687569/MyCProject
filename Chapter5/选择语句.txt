到目前为止, 我们只见过两种语句: 
return语句  ==> (2.2节)
表达式语句  ==>  (4.5节)

根据对语句执行顺序的影响, C语言的其余语句大多属于以下3大类:
1. 选择语句。if语句和 switch语句允许程序在一组可选项中选择一条
            特定的执行路径。
2. 重复语句。while语句、do语句和 for语句支持重复(循环)操作。
3. 跳转语句。break语句、continue语句和goto语句导致无条件地跳转到程序中的某个位置。

C语言还有其他两类语句:
复合语句: 把几条语句组合成一条语句
空语句: 不执行任何操作


5.1 逻辑表达式
在C语言中, 诸如 i < j这样的比较运算会产生整数: 0(假) 或 1(真)。

5.1.1 关系运算符
<       小于
>       大于
<=      小于等于
>=      大于等于

关系运算符的优先级低于算术运算符。
例如, 表达式 i + j < k - 1意思是(i + j) < (k - 1).
关系运算符都是左结合的。


表达式i < j < k在C语言中是合法的，但可能不是你所期望的含意。
因为<运算符是左结合的, 所以这个表达式等价于
(i < j) < k
换句话说, 表达式首先检测i是否小于j, 然后用比较后产生的结果(1或0)
来和k进行比较。


5.1.2 判等运算符
==      等于
!=      不等于

和关系运算符一样, 判等运算符也是左结合的, 也是产生0(假) 和 1(真)作为结果。
然而, 判等运算符的优先级低于关系运算符。
例如, 表达式 i < j == j < k 等价于表达式
(i < j) == (j < k)
如果i < j 和 j < k的结果同为真或同为假, 那么这个表达式的结果为真。


5.1.3逻辑运算符
!       逻辑非      右结合
&&      逻辑与      左结合
||      逻辑或      左结合
逻辑运算符所产生的结果是0或1。操作数的值经常是0或1，但这不是必需的。
逻辑运算符将任何非零值操作数作为真值来处理，同时将任何零值操作数作为假值来处理。

运算符&& 和 运算符 ||都对操作数进行"短路"计算。
也就是说, 这些运算符首先计算出左操作数的值, 然后计算右操作数;
如果表达式的值可以仅由左操作数的值推导出来, 那么将不计算右操作数的值。

运算符!的优先级和一元正负号的优先级相同
运算符&&和运算符||的优先级低于关系运算符和判等运算符。
例如, 表达式 i < j && k == m等价于表达式 (i < j) && (k == m).


当心 "悬空else"的问题


5.2.5 条件表达式
条件运算符 ? :
[条件表达式] 表达式1 ? 表达式2 : 表达式3


5.2.6 C89中的布尔值
C89标准中没有定义布尔类型。
因为许多程序需要变量能存储假或真值, 缺少布尔类型可能会有点麻烦。
针对C89的这一限制, 一种解决办法是先声明一个int型变量,
然后将其赋值为0或1:
int flag;
flag = 0;
...
flag = 1;

为了使程序更加便于理解, C89程序员通常使用TRUE和FALSE这样的名字定义宏:
#define TRUE    1
#define FALSE   0

为了发扬这一思想, 甚至可以定义一个可用作类型的宏:
#define BOOL    int


5.2.7 C99中的布尔值
长期缺乏布尔类型的问题在C99中得到了解决。
C99提供了 _Bool型, 所以在C语言的这一版本中, 布尔变量可以声明为:
_Bool flag;

_Bool是整数类型, 所以_Bool变量实际上就是整型变量;
但是和一般的整型不同, _Bool只能赋值为0或1。
一般来说, 往_Bool变量中存储非零值会导致变量赋值为1:


5.3 switch语句


问与答
====================================================
问: 当我用=代替==时我所用的编译器没有发出警告。
    是否有办法可以强制编译器注意这类问题?
答: 可以将 if(i == 0)  改写成  if(0 == i)

====================================================
针对复合语句, 使用缩进和放置花括号的风格
无论如何, 始终如一地坚持使用某种风格比选择适当地风格更重要。


====================================================
问: 如果i是int型变量, 而f是float型变量, 那么条件表达式
(i > 0 ? i : f)是哪一种类型的值?
答: 当int型和float型的值混合在一个条件表达式中时, 表达式的类型为
    float型。如果i > 0 为真, 那么变量i转化为float型后的值就是表达式的值。





